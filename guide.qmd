---
title: "Git and Github Guide"
author: "Kaiyi Ye"
format:
  pdf:
    toc: true
    number-sections: true
    keep-tex: true
    fontsize: 11pt
    pdf-engine: xelatex
    mainfont: 'Times New Roman'
    sansfont: 'Arial'
    monofont: 'Fira Mono'
    include-in-header:
      text: |
        \definecolor{codefontcolor}{RGB}{125,18,186}
        \definecolor{codebggray}{HTML}{f8f9fa}
        \let\textttOrig\texttt
        \renewcommand{\texttt}[1]{\textttOrig{\colorbox{codebggray}{\textcolor{codefontcolor}{#1}}}}
---

# Set up RStudio Project and Create a `.qmd` File

Establishing good practices for organizing and accessing project files is essential for effectively sharing your work with others.

## Step 1: Create a New Project

1.  Open RStudio.
2.  Go to the top menu and select `File` \> `New Project....`
3.  In the “New Project” wizard, select `New Directory`.
4.  Choose `New Project`.
5.  Enter a name for your project and select a location on your computer where you want to save it.
6.  Click `Create Project`.

## Step 2: Create a `.qmd` File

1.  Go to the top menu and select `File` \> `New file` \> `Quarto Document`.
2.  Save the file as `example.qmd`.
3.  Modify the YAML to set the document to render as HTML:

``` yaml
title: "example"
author: write your name
format: html
```

4.  Save the file, then render to preview the document output.

![](Images/Screenshot-knitted-qmd.png)\


# Create a Git Repository from Existing work

If you have an existing project that you want to version control with Git, follow these steps:

## Step 1: Initialize the Git Repository

1. Open your terminal or command prompt
2. Navigate to the root directory of your existing project folder using the `cd` command. For example: `cd path/to/your/project`
3. Run `git init` to initialize this directory as a Git repository. This command creates a new subdirectory named `.git` that contains all of your necessary repository files.

## Step 2: Add Your Files to the Repository

1. Add all of your project files to the staging area: `git add .`
2. Commit the files to the repository with a descriptive message: `git commit -m "Initial commit"`

## Step 3: Set Up the Remote Repository
1. Go to GitHub and create a new repository. Do not initialize it with a README, .gitignore, or license.
2. Copy the URL (SSH) of the new GitHub repository.
3. In your terminal, add the remote repository URL to your local repository: 

`git remote add origin git@github.com:your-username/your-repository.git`

4. Push your local repository to GitHub: `git push -u origin main`

Now you should be able to see your repository on GitHub.

::: {.callout-tip}
## Tip
We use `-u` flag to tell Git to remember the connection between our local main branch and the remote origin/main branch.
:::

